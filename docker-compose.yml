version: '3'
services:

  db:
    image: postgres:alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
    ports:
      - 5432
    volumes: 
      - ./db/dbinit.sql:/docker-entrypoint-initdb.d/create_tables.sql
      #- db-data:/var/lib/postgresql/data
    deploy:
      mode: replicated
      replicas: 1

  backend:
    image: danverh/sample-go:latest
    ports:
      - 8080:8080
    depends_on:
      - db
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      update_config:
        parallelism: 2 # only 2 containers is updated at a time
        failure_action: rollback # rollback updates in case of failure
        order: start-first # start a new task before an old one is stopped
      rollback_config:
        parallelism: 2
        failure_action: continue



  frontend:
    image: danverh/sample-react:latest
    ports:
      - 80:80
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      update_config:
        parallelism: 2 # only 2 containers is updated at a time
        failure_action: rollback # rollback updates in case of failure
        order: start-first # start a new task before an old one is stopped
      rollback_config:
        parallelism: 2
        failure_action: continue

#volumes:
  #db-data: